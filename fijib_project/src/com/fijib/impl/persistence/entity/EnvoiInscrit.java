package com.fijib.impl.persistence.entity;

// Generated Aug 21, 2014 11:10:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EnvoiInscrit generated by hbm2java
 */
@Entity
@Table(name = "envoi_inscrit", catalog = "db_fijib")
public class EnvoiInscrit implements java.io.Serializable {

	private String envoiId;
	private Client clientByCinBene;
	private Client clientByCliCinEnv;
	private Agentguichet agentguichet;
	private Boolean aunePersonne;
	private String codeSourceEnvoi;
	private Date dateEnv;
	private boolean envoiValide;
	private double frais;
	private boolean isPaypal;
	private double montant;
	private Set<Retrait> retraits = new HashSet<Retrait>(0);

	public EnvoiInscrit() {
	}
	
	//oo
	public EnvoiInscrit(String envoiId, Client clientByCinBene,
			Client clientByCliCinEnv, boolean isPaypal, String codeSourceEnvoi,
			boolean envoiValide) {
		this.envoiId = envoiId;
		this.clientByCinBene = clientByCinBene;
		this.clientByCliCinEnv = clientByCliCinEnv;
		this.isPaypal = isPaypal;
		this.codeSourceEnvoi = codeSourceEnvoi;
		this.envoiValide = envoiValide;
	}
	
	//zz
	public EnvoiInscrit(String envoiId, Client clientByCinBene,
			Client clientByCliCinEnv, Agentguichet agentguichet,
			Boolean aunePersonne, Date dateEnv, double frais, double montant,
			boolean isPaypal, String codeSourceEnvoi, boolean envoiValide,
			Set<Retrait> retraits) {
		this.envoiId = envoiId;
		this.clientByCinBene = clientByCinBene;
		this.clientByCliCinEnv = clientByCliCinEnv;
		this.agentguichet = agentguichet;
		this.aunePersonne = aunePersonne;
		this.dateEnv = dateEnv;
		this.frais = frais;
		this.montant = montant;
		this.isPaypal = isPaypal;
		this.codeSourceEnvoi = codeSourceEnvoi;
		this.envoiValide = envoiValide;
		this.retraits = retraits;
	}

	public EnvoiInscrit(String envoiId, Client clientByCinBene,
			Client clientByCliCinEnv, String codeSourceEnvoi,
			boolean envoiValide, boolean isPaypal) {
		this.envoiId = envoiId;
		this.clientByCinBene = clientByCinBene;
		this.clientByCliCinEnv = clientByCliCinEnv;
		this.codeSourceEnvoi = codeSourceEnvoi;
		this.envoiValide = envoiValide;
		this.isPaypal = isPaypal;
	}
    
	public EnvoiInscrit(String envoiId) {
		super();
		this.envoiId = envoiId;
	}

	public EnvoiInscrit(String envoiId, Client clientByCinBene,
			Client clientByCliCinEnv, Agentguichet agentguichet,
			Boolean aunePersonne, String codeSourceEnvoi, Date dateEnv,
			boolean envoiValide, Integer frais, boolean isPaypal,
			Integer montant, Set<Retrait> retraits) {
		this.envoiId = envoiId;
		this.clientByCinBene = clientByCinBene;
		this.clientByCliCinEnv = clientByCliCinEnv;
		this.agentguichet = agentguichet;
		this.aunePersonne = aunePersonne;
		this.codeSourceEnvoi = codeSourceEnvoi;
		this.dateEnv = dateEnv;
		this.envoiValide = envoiValide;
		this.frais = frais;
		this.isPaypal = isPaypal;
		this.montant = montant;
		this.retraits = retraits;
	}

	@Id
	@Column(name = "EnvoiID", unique = true, nullable = false, length = 100)
	public String getEnvoiId() {
		return this.envoiId;
	}

	public void setEnvoiId(String envoiId) {
		this.envoiId = envoiId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CIN_BENE"   )
	public Client getClientByCinBene() {
		return this.clientByCinBene;
	}

	public void setClientByCinBene(Client clientByCinBene) {
		this.clientByCinBene = clientByCinBene;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Cli_CIN_ENV" )
	public Client getClientByCliCinEnv() {
		return this.clientByCliCinEnv;
	}

	public void setClientByCliCinEnv(Client clientByCliCinEnv) {
		this.clientByCliCinEnv = clientByCliCinEnv;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Age_CIN")
	public Agentguichet getAgentguichet() {
		return this.agentguichet;
	}

	public void setAgentguichet(Agentguichet agentguichet) {
		this.agentguichet = agentguichet;
	}

	@Column(name = "aUnePersonne")
	public Boolean getAunePersonne() {
		return this.aunePersonne;
	}

	public void setAunePersonne(Boolean aunePersonne) {
		this.aunePersonne = aunePersonne;
	}

	@Column(name = "code_source_envoi" , length = 100)
	public String getCodeSourceEnvoi() {
		return this.codeSourceEnvoi;
	}

	public void setCodeSourceEnvoi(String codeSourceEnvoi) {
		this.codeSourceEnvoi = codeSourceEnvoi;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DateEnv", length = 19)
	public Date getDateEnv() {
		return this.dateEnv;
	}

	public void setDateEnv(Date dateEnv) {
		this.dateEnv = dateEnv;
	}

	@Column(name = "Envoi_valide")
	public boolean isEnvoiValide() {
		return this.envoiValide;
	}

	public void setEnvoiValide(boolean envoiValide) {
		this.envoiValide = envoiValide;
	}

	@Column(name = "Frais")
	public double getFrais() {
		return this.frais;
	}

	public void setFrais(double frais) {
		this.frais = frais;
	}

	@Column(name = "isPaypal")
	public boolean isIsPaypal() {
		return this.isPaypal;
	}

	public void setIsPaypal(boolean isPaypal) {
		this.isPaypal = isPaypal;
	}

	@Column(name = "Montant")
	public double getMontant() {
		return this.montant;
	}

	public void setMontant(double montant) {
		this.montant = montant;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "envoiInscrit")
	public Set<Retrait> getRetraits() {
		return this.retraits;
	}

	public void setRetraits(Set<Retrait> retraits) {
		this.retraits = retraits;
	}

}
