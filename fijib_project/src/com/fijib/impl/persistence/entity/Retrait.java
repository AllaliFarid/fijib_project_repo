package com.fijib.impl.persistence.entity;

// Generated Aug 21, 2014 11:10:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Retrait generated by hbm2java
 */
@Entity
@Table(name = "retrait", catalog = "db_fijib", uniqueConstraints = {
		@UniqueConstraint(columnNames = "idEnvoi_non_inscrit"),
		@UniqueConstraint(columnNames = "idEnvoi_inscrit") })
public class Retrait implements java.io.Serializable {

	private Integer retraitId;
	private EnvoiInscrit envoiInscrit;
	private EnvoiNonInscrit envoiNonInscrit;
	private Agentguichet agentguichet;
	private Date dateRetrait;
	private double montant;

	public Retrait() {
	}

	public Retrait(EnvoiInscrit envoiInscrit, EnvoiNonInscrit envoiNonInscrit,
			Agentguichet agentguichet, Date dateRetrait, double montant) {
		this.envoiInscrit = envoiInscrit;
		this.envoiNonInscrit = envoiNonInscrit;
		this.agentguichet = agentguichet;
		this.dateRetrait = dateRetrait;
		this.montant = montant;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "RetraitId", unique = true, nullable = false)
	public Integer getRetraitId() {
		return this.retraitId;
	}

	public void setRetraitId(Integer retraitId) {
		this.retraitId = retraitId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idEnvoi_inscrit", unique = true)
	public EnvoiInscrit getEnvoiInscrit() {
		return this.envoiInscrit;
	}

	public void setEnvoiInscrit(EnvoiInscrit envoiInscrit) {
		this.envoiInscrit = envoiInscrit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idEnvoi_non_inscrit", unique = true)
	public EnvoiNonInscrit getEnvoiNonInscrit() {
		return this.envoiNonInscrit;
	}

	public void setEnvoiNonInscrit(EnvoiNonInscrit envoiNonInscrit) {
		this.envoiNonInscrit = envoiNonInscrit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Age_CIN")
	public Agentguichet getAgentguichet() {
		return this.agentguichet;
	}

	public void setAgentguichet(Agentguichet agentguichet) {
		this.agentguichet = agentguichet;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DateRetrait", length = 19)
	public Date getDateRetrait() {
		return this.dateRetrait;
	}

	public void setDateRetrait(Date dateRetrait) {
		this.dateRetrait = dateRetrait;
	}

	@Column(name = "Montant")
	public double getMontant() {
		return this.montant;
	}

	public void setMontant(double montant) {
		this.montant = montant;
	}

}
